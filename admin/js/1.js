async function get_GS() {
    let response = await fetch("http://localhost:8000/api/GS/all");
    if (response.ok) {
        let json = await response.json();
        return json;
    } else {
        alert("–û—à–∏–±–∫–∞ HTTP: " + response.status);
    }
}

function editForm(id) {
    window.location.href = `./edit_article.html?id=${id}`;
}

async function render_GS() {
    let template = `
    <tr>
        <th scope="row">{–ò–î}</th>
        <td>{–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞}</td>
        <td>{–ú–æ–¥–µ–ª—å–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞}</td>
        <td>{–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã}</td>
        <td>{–ú–æ–¥–µ–ª—å–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã}</td>
        <td>{–û–±—ä—ë–º–û–ü}</td>
        <td>{–ì—Ü–û–ü}</td>
        <td>{NAME}</td>
        <td>
            <button onclick="editForm({–ò–î})">‚úèÔ∏è</button>
            <button onclick="deleteForm({–ò–î})">üóë</button>
        </td>
    </tr>`;
    
    let GSs = await get_GS();
    let container = document.getElementById("GS");
    GSs.forEach(element => {
        let GS = template
        .replaceAll("{–ò–î}", element.id)
        .replace("{–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞}", element.ManufacturerCPU)
        .replace("{–ú–æ–¥–µ–ª—å–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞}", element.ModelCPU)
        .replace("{–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã}", element.ManufacturerGPU)
        .replace("{–ú–æ–¥–µ–ª—å–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã}", element.ModelGPU)
        .replace("{–û–±—ä—ë–º–û–ü}", element.SizeRAM)
        .replace("{–ì—Ü–û–ü}", element.HertzRAM)
        .replace("{NAME}", element.NAME)
        container.innerHTML += GS;
    });
}

render_GS();

async function deleteForm(id) {
 let response = await fetch("http://localhost:8000/api/GS/" + id, 
    {         
        method: "DELETE",    
    });
    if (response.ok)
    {
        window.location.reload()
    }
    else {
        alert("–û—à–∏–±–∫–∞ HTTP: " + response.status)
    }
        
}

